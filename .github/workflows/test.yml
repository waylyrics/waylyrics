name: Build, Test & upload

on:
  [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  WAYLYRICS_THEME_PRESETS_DIR: /usr/share/waylyrics/themes

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Rust Toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Install deps
      run: |
        sudo rm /etc/apt/sources.list.d/microsoft-prod.list
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends libgtk-4-dev libdbus-1-dev pkg-config weston
    - uses: Swatinem/rust-cache@v2
    - name: Test
      run: cargo test
    - name: Build
      run: cargo build --release
    - name: Installation
      run: |
        sudo mkdir -p /usr/share/waylyrics
        sudo install -m644 metainfo/io.github.waylyrics.Waylyrics.gschema.xml /usr/share/glib-2.0/schemas/
        sudo install -dm755 ${WAYLYRICS_THEME_PRESETS_DIR}
        sudo cp -r themes/* ${WAYLYRICS_THEME_PRESETS_DIR}/

        # install schema
        sudo glib-compile-schemas /usr/share/glib-2.0/schemas/
    - name: Start waylyrics
      run: |
        # init weston
        weston --backend=headless-backend.so -Swayland-1 &
        # let weston prepare for 1s
        sleep 1

        # start waylyrics
        ret=-1
        WAYLAND_DISPLAY=wayland-1 RUST_BACKTRACE=1 timeout 5s ./target/release/waylyrics || ret=$?

        if [ $ret -eq 124 ]; then
          echo "waylyrics survived the smoke test"
          exit 0
        else
          echo "waylyrics crashed during the smoke test (exit code $ret)"
          exit 1
        fi
    - name: Prepare assets
      shell: bash
      run: |
        tar -cvzf amd64-linux-gnu.tar.gz target/release/waylyrics \
        LICENSE res metainfo/io.github.waylyrics.Waylyrics.{gschema.xml,desktop}
        
    - name: Declare some variables # https://stackoverflow.com/a/61699863
      id: vars
      shell: bash
      run: |
        echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - uses: actions/upload-artifact@v4
      with:
        name: linux-x86_64
        path: amd64-linux-gnu.tar.gz

  update-aur-pkgbuild:
    name: 'Update AUR PKGBUILD'
    runs-on: 'ubuntu-latest'
    if: github.event_name == 'push' && github.ref_type == 'tag'
    needs: 'build'
    steps:
      - name: 'Setup Git'
        run: |
          echo -e "${{ secrets.AUR_PRIVATE_KEY }}" | install -Dm600 /dev/stdin ~/.ssh/id_ed25519
          chmod 700 ~/.ssh
          ssh-keyscan aur.archlinux.org >> ~/.ssh/known_hosts
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
      - name: 'Checkout'
        uses: actions/checkout@v4
      - name: 'Clone AUR repository'
        run: git clone "ssh://aur@aur.archlinux.org/waylyrics.git"
      - name: 'Generate pkgver'
        id: pkgver
        uses: ./.github/actions/update-pkgbuild-action
        with:
          tag: ${{ github.ref_name }}
          dir: waylyrics
      - name: 'Show diff'
        run: git -C waylyrics diff
      - name: 'Commit'
        run: |
          git -C waylyrics add .
          git -C waylyrics commit -m "Bump version to ${{ steps.pkgver.outputs.pkgver }}"
      - name: 'Push'
        run: git -C waylyrics push origin master
